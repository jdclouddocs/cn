swagger: "2.0"
info:
  version: "v1"
  title: 原生容器
  description: 原生容器相关接口

basePath: /regions/{regionId}

paths:
  "/containers":
    ###################### 创建容器接口 ######################
    post:
      description: |
        创建一台或多台指定配置容器。
        - 创建容器需要通过实名认证
        - 镜像
            - 容器的镜像通过镜像名称来确定
            - nginx:tag 或 mysql/mysql-server:tag 这样命名的镜像表示 docker hub 官方镜像
            - container-registry/image:tag 这样命名的镜像表示私有仓储的镜像
            - 私有仓储必须兼容 docker registry 认证机制，并通过 secret 来保存机密信息
        - hostname 规范
            - 支持两种方式：以标签方式书写或以完整主机名方式书写
            - 标签规范
                - 0-9，a-z(不分大小写)和 -（减号），其他的都是无效的字符串
                - 不能以减号开始，也不能以减号结尾
                - 最小1个字符，最大63个字符
            - 完整的主机名由一系列标签与点连接组成
                - 标签与标签之间使用“.”(点)进行连接
                - 不能以“.”(点)开始，也不能以“.”(点)结尾
                - 整个主机名（包括标签以及分隔点“.”）最多有63个ASCII字符
        - 网络配置
            - 指定主网卡配置信息
                - 必须指定一个子网
                - 一台云主机创建时必须指定一个安全组，至多指定 5 个安全组
                - 可以指定 elasticIp 规格来约束创建的弹性 IP，带宽取值范围 [1-200]Mbps，步进 1Mbps
                - 可以指定网卡的主 IP(primaryIpAddress)，该 IP 需要在子网 IP 范围内且未被占用，指定子网 IP 时 maxCount 只能为1
                - 安全组 securityGroup 需与子网 Subnet 在同一个私有网络 VPC 内
                - 主网卡 deviceIndex 设置为 1
        - 存储
            - volume 分为 root volume 和 data volume，root volume 的挂载目录是 /，data volume 的挂载目录可以随意指定
            - volume 的底层存储介质当前只支持 cloud 类别，也就是云硬盘
            - 系统盘
                - 云硬盘类型可以选择 ssd、premium-hdd
                - 磁盘大小
                    - ssd：范围 [10, 100]GB，步长为 10G
                    - premium-hdd：范围 [20, 1000]GB，步长为 10G
                - 自动删除
                    - 云盘默认跟随容器实例自动删除，如果是包年包月的数据盘或共享型数据盘，此参数不生效
                - 可以选择已存在的云硬盘
            - 数据盘
                - 云硬盘类型可以选择 ssd、premium-hdd
                - 磁盘大小
                    - ssd：范围[20,1000]GB，步长为10G
                    - premium-hdd：范围[20,3000]GB，步长为10G
                - 自动删除
                    - 默认自动删除
                - 可以选择已存在的云硬盘
                - 单个容器最多可以挂载 7 个 data volume
        - 计费
          - 弹性IP的计费模式，如果选择按用量类型可以单独设置，其它计费模式都以主机为准
          - 云硬盘的计费模式以主机为准
        - 容器日志
            - 默认在本地分配10MB的存储空间，自动 rotate
        - 其他
            - 创建完成后，容器状态为running
            - maxCount 为最大努力，不保证一定能达到 maxCount
      operationId: createContainers
      parameters:
        - name: containerSpec
          in: body
          description: "创建容器规格"
          schema:
            $ref: "../model/ContainerSpec.yaml#/definitions/containerSpec"
        - name: maxCount
          in: query
          type: integer
          description: "购买实例数量；取值范围：[1,100]"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  containerIds:
                    type: array
                    items:
                      type: string
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        429:
          description: "Quota exceeded"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

    ###################### 容器列表接口 ######################
    get:
      description: |
        批量查询原生容器的详细信息<br>
        此接口支持分页查询，默认每页20条。
      operationId: describeContainers
      parameters:
        - name: pageNumber
          in: query
          type: integer
          description: "页码；默认为1"
        - name: pageSize
          in: query
          type: integer
          description: "分页大小；默认为20；取值范围[10, 100]"
        - name: filters
          in: query
          type: array
          items:
            $ref: "../../common/model/Filter.yaml#/definitions/filter"
          description: | 
            containerId - 实例ID，精确匹配，支持多个
            privateIpAddress - 主网卡IP地址，模糊匹配，支持单个
            az - 可用区，精确匹配，支持多个
            vpcId - 私有网络ID，精确匹配，支持多个
            status - 容器状态，精确匹配，支持多个
            name - 实例名称，模糊匹配，支持单个
            subnetId - 镜像ID，模糊匹配，支持单个
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  containers:
                    type: array
                    items:
                      $ref: "../model/Container.yaml#/definitions/container"
                  totalCount:
                    type: number
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

  "/containers/{containerId}":
    ###################### 容器详情接口 ######################
    get:
      description: |
        查询一台原生容器的详细信息
      operationId: describeContainer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                $ref: "../model/Container.yaml#/definitions/container"
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"
    
    ###################### 删除容器接口 ######################
    delete:
      description: |
        容器状态必须为 stopped、running 或 error状态。 <br>
        按量付费的实例，如不主动删除将一直运行，不再使用的实例，可通过本接口主动停用。<br>
        只能支持主动删除按量计费类型的实例。包年包月过期的容器也可以删除，其它的情况还请发工单系统。计费状态异常的容器无法删除。
      operationId: deleteContainer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

  "/containers/{containerId}:startContainer":
    ###################### 启动容器接口 ######################
    post:
      description: |
        启动处于关闭状态的单个容器，处在任务执行中的容器无法启动。<br>
        容器实例或其绑定的云盘已欠费时，容器将无法正常启动。<br>
      operationId: startContainer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

  "/containers/{containerId}:stopContainer":
    ###################### 停止容器接口 ######################
    post:
      description: |
        停止处于运行状态的单个实例，处于任务执行中的容器无法启动。
      operationId: stopContainer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

  "/containers/{containerId}:modifyContainerAttribute":
    ###################### 修改容器属性 ######################
    patch:
      description: |
        修改容器的 名称 和 描述。
      operationId: modifyContainerAttribute
      parameters:
        - name: name
          in: query
          type: string
          description: 容器名称
        - name: description
          in: query
          type: string
          description: 容器描述；和description必须要指定一个
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

  "/containers/{containerId}:associateElasticIp":
    ###################### 容器绑定公网IP ######################
    post:
      description: |
        容器绑定弹性公网 IP，绑定的是主网卡、主内网IP对应的弹性IP. <br>
        一台云主机只能绑定一个弹性公网 IP(主网卡)，若主网卡已存在弹性公网IP，会返回错误。<br>
        如果是黑名单中的用户，会返回错误。
      operationId: associateElasticIp
      parameters:
        - name: elasticIpId
          in: query
          type: string
          required: true
          description: 弹性IP ID
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

  "/containers/{containerId}:disassociateElasticIp":
    ###################### 容器解绑公网IP ######################
    post:
      description: |
        容器解绑公网 IP，解绑的是主网卡、主内网 IP 对应的弹性 IP.
      operationId: disassociateElasticIp
      parameters:
        - name: elasticIpId
          in: query
          type: string
          required: true
          description: 弹性IP ID
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

  "/containers/{containerId}:getLogs":
    ###################### 查询容器日志 ######################
    get:
      description: |
        查询单个容器日志
      operationId: getLogs
      parameters:
        - name: tailLines
          in: query
          type: integer
          description: |
            返回日志文件中倒数 tailLines 行，如不指定，默认从容器启动时或 sinceSeconds 指定的时间读取。
        - name: sinceSeconds
          in: query
          type: integer
          description: |
            返回相对于当前时间之前sinceSeconds之内的日志。
        - name: limitBytes
          in: query
          type: integer
          description: |
           限制返回的日志文件内容字节数，取值范围 [1-4]KB，最大 4KB.
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                properties:
                  logs:
                    type: object
                    properties:
                      content:
                        type: string
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"



#路径通用参数
parameters:
  regionId:
    name: regionId
    in: path
    required: true
    type: string
    description: Region ID
  container:
    name: containerId
    in: path
    required: true
    type: string
    description: Container ID
